{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
    // "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json", // Required to have rules that rely on Types.
    "tsconfigRootDir": "./",
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "extends": [
    "plugin:@typescript-eslint/recommended", // Out of the box Typescript rules
    "plugin:prettier/recommended",
    "plugin:react-hooks/recommended",
    "standard" // Out of the box StandardJS rules
  ],
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint", // Let"s us override rules below.
    "prettier"
  ],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],
    "import/prefer-default-export": "off",
    "no-use-before-define": "off",
    "multiline-ternary": ["error", "never"],
    "@typescript-eslint/no-use-before-define": "off", // Allows us to hoist variables and functions which I am a fan of, functions not variables that is.
    "@typescript-eslint/no-explicit-any": "off", // Too strict for my case, sometimes I need an any type
    "@typescript-eslint/member-delimiter-style": ["error", { // Prevents us from using any delimiter for interface properties.
      "multiline": {
        "delimiter": "none",
        "requireLast": false
      },
      "singleline": {
        "delimiter": "comma",
        "requireLast": false
      }
    }],
    // "eslint multiline-ternary": "always-multiline",
    "camelcase": "off",
    "@typescript-eslint/indent": "off", // This is the job of StandardJS, they are competing rules so we turn off the Typescript one.
    "no-unused-vars": "off", // On the fence about using this one, sometimes we import a package that is never used directly.
    "node/no-unsupported-features/es-syntax": "off", // Allows us to use Import and Export keywords.
    "space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }],
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": ["off"],
    "import/no-unresolved": "error",
    "prettier/prettier": "error",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
